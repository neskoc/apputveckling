% haar2.m
%  haar.m computes 1-level of the 2-d
%  Haar wavelet transform.
%
%  Input: x (an MxN image)
%  Output: 
%           w1 = M/2 x N/2 low-res image (scaling coefficients)
%           w2 = M/2 x N/2 horizontal wavelet coefficients
%           w3 = M/2 x N/2 vertical wavelet coefficients
%           w4 = M/2 x N/2 diagonal wavelet coefficients
%
% Usage: [w1,w2,w3,w4] = haar2(x)

function [w1,w2,w3,w4] = haar2(x)

[m,n] = size(x);

lr_filter = [ 1,  1;
              1,  1];
hc_filter = [ 1,  1;
             -1, -1];
vc_filter = [ 1, -1;
              1, -1];
dc_filter = [ 1, -1;
             -1,  1];
w1
for i = 1 : n/2
    for j = 1 : n/2
        i0 = 2 * (i - 1);
        j0 = 2 * (j - 1);
        w1(i,j) = 1/2 * (x(i0+1, j0+1) + x(i0+1, j0+2) + x(i0+2, j0+1) + x(i0+2, j0+2)); 
        w2(i,j) = 1/2 * (x(i0+1, j0+1) + x(i0+1, j0+2) - x(i0+2, j0+1) - x(i0+2, j0+2)); 
        w3(i,j) = 1/2 * (x(i0+1, j0+1) - x(i0+1, j0+2) + x(i0+2, j0+1) - x(i0+2, j0+2)); 
        w4(i,j) = 1/2 * (x(i0+1, j0+1) - x(i0+1, j0+2) - x(i0+2, j0+1) + x(i0+2, j0+2)); 
    end
end
